:py:mod:`palma.base.splitting_strategy`
=======================================

.. py:module:: palma.base.splitting_strategy


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   palma.base.splitting_strategy.ValidationStrategy



Functions
~~~~~~~~~

.. autoapisummary::

   palma.base.splitting_strategy._index_to_bool
   palma.base.splitting_strategy._bool_to_index



.. py:function:: _index_to_bool(array, length)


.. py:function:: _bool_to_index(array)


.. py:class:: ValidationStrategy(splitter: Union[sklearn.model_selection._split.BaseShuffleSplit, sklearn.model_selection._split.BaseCrossValidator, List[tuple], List[str]], **kwargs)


   Bases: :py:obj:`object`

   .. py:property:: test_index
      :type: numpy.ndarray


   .. py:property:: train_index
      :type: numpy.ndarray


   .. py:property:: indexes_val
      :type: list


   .. py:property:: indexes_train_test
      :type: list


   .. py:property:: id


   .. py:property:: splitter


   .. py:method:: __call__(X: pandas.DataFrame, y: pandas.Series, X_test: pandas.DataFrame = None, y_test: pandas.Series = None, groups=None, **kwargs)


   .. py:method:: __correct_nested(X)


   .. py:method:: __str__() -> str

      Return str(self).



